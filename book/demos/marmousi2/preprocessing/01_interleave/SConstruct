from rsf.proj import *
import math

# Within each shot interpolate a trace between each existing trace
shots_x = []
shots_z = []
nsx = 200
dsx = 25.0
osx = 5025.0
ot = 0
dt = 0.002
nt = 2500
tmax = ot + dt*(nt-1)
twindow_length = 100
twindow_overlap = 10
ntwindow = int(math.ceil((tmax-ot)/(dt*(twindow_length-twindow_overlap))))
ox1 = 0
dx1 = 1
nx1 = 814
x1max = ox1 + dx1*(nx1-1)
x1window_length = 100
x1window_overlap = 10
nx1window = int(math.ceil((x1max-ox1) / (dx1*(x1window_length-x1window_overlap))))
nwindow=ntwindow*nx1window-1
for ishot in range(0,nsx):
     sx = osx + ishot*dsx
     shot_x = 'ux_shot_%d' % ishot
     shots_x.append(shot_x)
     shot_z = 'uz_shot_%d' % ishot
     shots_z.append(shot_z)
     Flow('ux_shot_%d' % ishot,'../../data/ux.rsf',
          '''
          window n3=1 f3=%d |
          sflpad jump=2 |
          put o2=0 d2=1 n3=1 d3=1 o3=0 n4=1 d4=1 o4=0 n5=1 d5=1 o5=0
          ''' % ishot)
     Flow('uz_shot_%d' % ishot,'../../data/uz.rsf',
          '''
          window n3=1 f3=%d |
          sflpad jump=2 |
          put o2=0 d2=1 n3=1 d3=1 o3=0 n4=1 d4=1 o4=0 n5=1 d5=1 o5=0
          ''' % ishot)

Flow('ux_dec',shots_x,
     '''
     cat axis=3 ${SOURCES[0:%d]} |
     put o2=0 d2=1 o3=0 d3=1 n4=1 o4=0 d4=1 n5=1 o5=0 d5=1
     ''' % nsx,stdin=0)

Flow('uz_dec',shots_z,
     '''
     cat axis=3 ${SOURCES[0:%d]} |
     put o2=0 d2=1 o3=0 d3=1 n4=1 o4=0 d4=1 n5=1 o5=0 d5=1
     ''' % nsx,stdin=0)

End()