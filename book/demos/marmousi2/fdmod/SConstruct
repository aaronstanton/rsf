import os

os.environ['OMP_NUM_THREADS'] = '8'

from rsf.proj import *

Flow('r_',None,'math n1=1401 d1=5 o1=0 output=0')
Flow('s_',None,'math n1=1   d1=0  o1=0 output=0')
# receiver positions
Flow('zr','r_','math output=10')
Flow('xr','r_','math output="x1"')
Flow('rec',['xr','zr'],'''cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)

# Wavelet
Flow('wav',None,
     '''
     spike mag=1 n1=4000 d1=0.001 k1=100 | 
     ricker1 frequency=20 
     ''')
# Elastic wavelet
Flow('ewav','wav','sfspray axis=1 n=2 | sftransp plane=12 | sftransp plane=13')

shots_x = []
shots_z = []
nsx = 1
dsx = 50.0
osx = 3500.0
for ishot in range(0,nsx):
     sx = osx + ishot*dsx
     shot_x = 'ux_%d' % ishot
     shots_x.append(shot_x)
     shot_z = 'uz_%d' % ishot
     shots_z.append(shot_z)
     # shot positions
     Flow('zs_%d' % ishot,'s_','math output=10')
     Flow('xs_%d' % ishot,'s_','math output=%d' % sx)
     Flow('rs_%d' % ishot,'s_','math output=1')
     Flow('src_%d' % ishot,['xs_%d' % ishot,'zs_%d' % ishot,'rs_%d' % ishot],'''
          cat axis=2 space=n
          ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
          ''', stdin=0)
     # offset
     Flow('offset_%d' % ishot,'xr','math output="input-%g"' % sx)
     # Isotropic Elastic Finite-difference modeling
     Flow('d_fd_%d ' % ishot,'ewav ../model/den.rsf rec.rsf src_%d ../model/ccc.rsf' % ishot,
          '''
          ewefd2d
          den=${SOURCES[1]}
          rec=${SOURCES[2]}
          sou=${SOURCES[3]}
          ccc=${SOURCES[4]}
          dabc=y snap=n verb=y jdata=10
          ssou=y nb=250 nbell=5
          ''')
     Flow('ux_%d' % ishot,'d_fd_%d offset_%d' % (ishot,ishot),
          '''
          window n2=1 f2=1 | 
          transp | 
          put label1=t unit1=s label2=x unit2=m title="ux" |
          math output="(1e12)*input" 
          ''')
     Flow('uz_%d' % ishot,'d_fd_%d offset_%d' % (ishot,ishot),
          '''
          window n2=1 f2=0 | 
          transp | 
          put label1=t unit1=s label2=x unit2=m title="uz" |
          math output="(1e12)*input" 
          ''')

Flow('ux',shots_x,
     '''
     cat axis=3 ${SOURCES[0:%d]} |
     put o3=%d d3=%d label3="sx" unit3=m label2="gx" unit2=m
     ''' % (nsx,osx,dsx),stdin=0)
Flow('uz',shots_z,
     '''
     cat axis=3 ${SOURCES[0:%d]} |
     put o3=%d d3=%d label3="sx" unit3=m label2="gx" unit2=m
     ''' % (nsx,osx,dsx),stdin=0)

End()
